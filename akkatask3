cat /etc/passwd | grep username => to see a particular user details
   useradd -d /opt/
   useradd -d /opt/name user name
   useradd -d /opt/directoryanme -u id username
   cat /etc/group
   id 2213
   useradd bio
   useradd -g bio
   cat /etc/group
   id 2213
   cat /etc/group
   useradd bio
   id 2213
   id 1099
   cat /etc/passwd
   usermod -a -G zoro,bae,lol,kappa,hola,lauda,pl
   usermod -a -G zoro,bae,lol,kappa,hola,lauda,pl bio
   ll
   usermod -a -G zoro,bae,lol,kappa,hola,lauda,pl bio
   usermod -a -G zoro,bae,lol,kappa,bio bio
   usermod -a -G zoro,bae,lol,kappa,hola bio
   id 2213
   ll
   cd ..
   cd home
   ll
   groupadd ko
   cat /etc/passwd
   useradd -u 2005 -g ko last
   useradd -u 2005 -g ko op
   cat /etc/passwd
   cat /etc/group
   id 2216
   cat /etc/passwd
   usermod -a -G zoro,bae,lol,kappa ko
   useradd ko
   usermod -a -G zoro,bae,lol,kappa ko
   useradd -g ko
   usermod -a -G zoro,bae,lol,kappa ko
   history
   useradd -u id -g group user
   usermod -a -G n users  groupname
   bash => BORN AGAINST SHELL
 useradd -c "comment" username
 useradd -e expire dd/mm/yyyy -f 10 username
chage -l username
 useradd -g id username
 useradd -s /path username
 useradd -m -d /path -s /bin/bash -c "comment" -U username
userdel username
 useradd -M -N -r -s /bin/false -c "I AM NO GOD" gain
 git status => to see the status of the files
git add => to add the files into staging
git commit -m "this ia --- commit" filename => to commit a file
git add * => used to add all the files into staging or index (used in multiple file cases)
git add filename1 filename2 => to add 2 files at a time
git add filename{startingno. .. endingno. } => to add multiple files with same name with differeant numbering [no. =number]
git add .  =>to add all files (hidden also)
git add p* P* a* A* d* => this is the only one example here for this time
git reset filename => to change the file from staging to working directory or from commiting to working directory
git stage filename => to stage the only one file
git stage filename filename => to stage two files at a time
git stage filename{startingno. .. endingno.} => to stage all files at a time
git stage * => to add all files at a time(only normal)
git stage . => to add all files hidden also
git stage --all => to add all files
git stage -A => to add all files
git stage p* P* a* A* d* => this is the only one example here for this time
git reset => to change the file from staging to working directory or from commiting to working directory
git reset filename
git reset filename filename
git reset . (this is also example)
git reset * (this is also example)
git reset p* P* a* A* d* (this is the only one example here for this time)
git commit -m "message" filename
git commit -m "message" filename filename => to commit multiple files at a time
git commit -m "message" => to commitall files at a time
example
git commit -m "index.html VI.O" index.html
git commit -am "message" => we are commiting the all modified and deleted files from working directory
git show => this is a command used to see the latest commited files along with files content
git reset --soft HEAD => to call back latest comiited files from commiting area to staging
git reset @~
git diff
git diff filename
git add -u : => to add only modified and deleted files from working directory to staging
git reset -hard HEAD
git branch
git branch -new Branch name
git branch -m -old Branch name -new Branch name
git branch -d -branch name
git checkout -branch name
git     checkout -b -new branch name
git push origin -u future branch
git push origin future-branch
git push origin --all
git commit --amend --no-edit
git pull
git fetch
git rebase
git merge
git tag
git tag -a -m
git push tag
git branch conflicts
git stash
git stash pop id
git stash show stash id
git stash drop
git stash clear
pwd: present working directory
whoami: to see which user we are using
host name: to kwonn the name of the host
uname -r to kwon the the kernel
uname -a
last
last login
users
date: to kwon the present system date
cal: to see the calendar
cal 2023: to see the 2023 calendar
hostnamectl
cat /etc/os-release
cat /etc/redhat-release
cat /etc/rockylinux-release
tree
rpm -q packagename : to known if the package is install
rpm -qi packagename
rpm -Rqi packagename
cat > filename
cat  filename
cat>>filename
touch filename
touch filename{1..34}
touch .filename
mkdir directory-name
mkdir directory-name{..}
mkdir .directory-name
mkdir -p /directory/directory/.........
ls
ls -a
ls -l
ll
ll -a
ll -l
ls -la
ls -r
ls -lra
ls -o
ll -s
ll -o
ll -r
ll -l
ll -lra

mv filename newfilename
mv source-path destination-path
cp file-name new-filename: this command is used for copy data for a file to a no s-existing file
cp source-file-path destination-path:only for a file

cp -r source-directory-path destination-path
cp -rvfp source-directory-path destination=path : recursively,vigorously,forcefully,with permissions
cp source-directory-path
cp -rvfp source-directory-path
rm filename
rm filename.....
rm source-path/filename
rm -f filename
rm -f filename.......
rm -f source-path/filename
rm -r directoryname
rm -r directoryname .....
rm -r source-directory/directory name
rm -rf directory name
rm -rf directory name...
rm -rf source-directory/directory-name
rm filename{1..67}
rm -f filename {start number .. end number}
cd ..
cd directory
cd directory/..
cd ../../../../../../../..
cd -
init 0
init 6
ctrl+d
yum list install
yum list available
yum update -y
yum remove package-name
chmod u+rwx
chmod g+rwx
chmod o+rwx
chmod ug+rwx
chmod go+rwx
chmod uo+rwx
chmod ugo+rwx
chmod u-rwx
chmod g-rwx
chmod o-rwx
chmod ug-rwx
chmod go-rwx
chmod uo-rwx
chmod ugo-rwx
chmod 444
chmod 644
chmod 755
chmod 566
init 1
init 2
init 4
init 3
init 5
runlevel
reboot
free -h
free -k
free -b
free -n
free -g
lsblk
fdisk -l
du -h
vi filename
vim filename
i
r
o
O
A
a
w
b
nw
nb
dd
ndd
yy
nyy
p
hjkl
u
x
X
g
G
set nu
set nonu
:wq
:q!
:! command
:w
:w!
:q
:wq!
/character-name
/word-name
ll
cd
vim
ll .
gcc
./
rm
rm -r
rm -f

